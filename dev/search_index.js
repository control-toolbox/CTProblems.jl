var documenterSearchIndex = {"docs":
[{"location":"api.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"CurrentModule = CTProblems ","category":"page"},{"location":"api.html","page":"API","title":"API","text":"Modules = [CTProblems]\nOrder = [:module, :type, :function, :macro]","category":"page"},{"location":"api.html#CTProblems.CTProblems","page":"API","title":"CTProblems.CTProblems","text":"CTProblems module.\n\nLists all the imported modules and packages:\n\nBase\nCTBase\nCore\nDocStringExtensions\n\nList of all the exported names:\n\nProblem\nProblems\nplot\n\n\n\n\n\n","category":"module"},{"location":"api.html#CTProblems.AbstractCTProblem","page":"API","title":"CTProblems.AbstractCTProblem","text":"abstract type AbstractCTProblem\n\n\n\n\n\n","category":"type"},{"location":"api.html#CTProblems.CTProblemsException","page":"API","title":"CTProblems.CTProblemsException","text":"abstract type CTProblemsException <: Exception\n\n\n\n\n\n","category":"type"},{"location":"api.html#CTProblems.NonExistingProblem","page":"API","title":"CTProblems.NonExistingProblem","text":"struct NonExistingProblem <: CTProblems.CTProblemsException\n\nFields\n\nexample::Tuple{Vararg{Symbol}}\n\n\n\n\n\n","category":"type"},{"location":"api.html#CTProblems.OptimalControlProblem","page":"API","title":"CTProblems.OptimalControlProblem","text":"struct OptimalControlProblem{example} <: CTProblems.AbstractCTProblem\n\nFields\n\ndescription::String\nmodel::CTBase.OptimalControlModel\nsolution::CTBase.OptimalControlSolution\n\nExample\n\njulia> using CTProblems\njulia> using CTBase\njulia> description = \"My empty optimal control problem\"\njulia> ocp = Model()\njulia> sol = OptimalControlSolution()\njulia> prob = CTProblems.OptimalControlProblem{(:ocp, :empty)}(description, ocp, sol)\njulia> prob isa CTProblems.AbstractCTProblem\ntrue\njulia> prob isa CTProblems.OptimalControlProblem\ntrue\njulia> prob isa isa CTProblems.OptimalControlProblem{(:ocp, :empty)}\ntrue\njulia> prob isa CTProblems.OptimalControlProblem{(:ocp, :empty, :dummy)}\nfalse\n\n\n\n\n\n","category":"type"},{"location":"api.html#CTProblems.OptimalControlProblem-Union{Tuple{}, Tuple{example}} where example","page":"API","title":"CTProblems.OptimalControlProblem","text":"OptimalControlProblem{example}() where {example}\n\nThrow a NonExistingProblem exception if there is no optimal control problem described by example.\n\nExample\n\njulia> CTProblems.OptimalControlProblem{(:ocp, :dummy)}()\nERROR: there is no optimal control problem described by (:ocp, :dummy)\n\n\n\n\n\n","category":"method"},{"location":"api.html#Base.show-Tuple{IO, MIME{Symbol(\"text/plain\")}, CTProblems.OptimalControlProblem}","page":"API","title":"Base.show","text":"show(\n    io::IO,\n    _::MIME{Symbol(\"text/plain\")},\n    prob::CTProblems.OptimalControlProblem\n)\n\n\nShow the description, the model and the solution of the optimal control problem.\n\njulia> using CTProblems\njulia> Problem(:integrator)\ndescription     = Double integrator - energy min\nmodel    (Type) = CTBase.OptimalControlModel{:autonomous, :scalar}\nsolution (Type) = CTBase.OptimalControlSolution\n\n\n\n\n\n","category":"method"},{"location":"api.html#Base.showerror-Tuple{IO, CTProblems.NonExistingProblem}","page":"API","title":"Base.showerror","text":"showerror(io::IO, e::CTProblems.NonExistingProblem)\n\n\nPrint the error message when the optimal control problem described by e.example does not exist. \n\n\n\n\n\n","category":"method"},{"location":"api.html#CTProblems.Problem-Tuple","page":"API","title":"CTProblems.Problem","text":"Problem(description...) -> Any\n\n\nReturns the optimal control problem described by description. See Overview of CTProblems.jl and Problems for details.\n\n\n\n\n\n","category":"method"},{"location":"api.html#CTProblems.Problems-Tuple{}","page":"API","title":"CTProblems.Problems","text":"Problems()\n\n\nPrint the list of available problems, see List of problems for details.\n\n\n\n\n\n","category":"method"},{"location":"api.html#RecipesBase.plot-Tuple{Any}","page":"API","title":"RecipesBase.plot","text":"plot(sol; kwargs...) -> Plots.Plot\n\n\nA binding to CTBase.plot function.\n\n\n\n\n\n","category":"method"},{"location":"problems.html#Problems","page":"Problems","title":"Problems","text":"","category":"section"},{"location":"problems.html","page":"Problems","title":"Problems","text":"Pages = [\n    \"problems/simple_exponential.md\",\n    \"problems/double_integrator.md\",\n]\nDepth = 1","category":"page"},{"location":"index.html#Introduction-to-the-CTProblems.jl-package","page":"Introduction","title":"Introduction to the CTProblems.jl package","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"The CTProblems.jl package is part of the control-toolbox ecosystem. We present below the control-toolbox ecosystem, then we give an overview ot the CTProblems.jl package and finally, in the last part, you can find the list of available optimal control problems.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Contents.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Pages = [\"index.md\", \"problems.md\", \"api.md\"]\nDepth = 3","category":"page"},{"location":"index.html#Control-toolbox-ecosystem","page":"Introduction","title":"Control-toolbox ecosystem","text":"","category":"section"},{"location":"index.html#Solvers-of-optimal-control-problems","page":"Introduction","title":"Solvers of optimal control problems","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"The control-toolbox ecosystem gathers Julia packages for mathematical control and applications. It is an outcome of a research initiative supported by the Centre Inria of Université Côte d'Azur and a sequel to previous developments, notably Bocop and Hampath. See also: ct gallery. The root package is OptimalControl.jl which aims to provide tools to solve optimal control problems by direct and indirect methods.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"(Image: doc OptimalControl.jl)","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"An optimal control problem can be described as minimising the cost functional","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"g(t_0 x(t_0) t_f x(t_f)) + int_t_0^t_f f^0(t x(t) u(t))mathrmdt","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"where the state largex and the control largeu are functions subject, for larget in t_0 t_f, to the differential constraint","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"   dotx(t) = f(t x(t) u(t))","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"and other constraints such as","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"beginarrayllcll\nxi_l  le xi(t u(t))        le xi_u \neta_l le eta(t x(t))       le eta_u \npsi_l le psi(t x(t) u(t)) le psi_u \nphi_l le phi(t_0 x(t_0) t_f x(t_f)) le phi_u\nendarray","category":"page"},{"location":"index.html#Installation","page":"Introduction","title":"Installation","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"To install a package from the control-toolbox ecosystem, you must add its registry into your Julia configuration.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Start Julia:","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"shell> julia\n\n   _       _ _(_)_     |  Documentation: https://docs.julialang.org\n  (_)     | (_) (_)    |\n   _ _   _| |_  __ _   |  Type \"?\" for help, \"]?\" for Pkg help.\n  | | | | | | |/ _` |  |\n  | | |_| | | | (_| |  |  Version 1.8.2 (2022-09-29)\n _/ |\\__'_|_|_|\\__'_|  |  Official https://julialang.org/ release\n|__/                   |","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Then, add ct-registry to the list of known registries:","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"julia> ]\npkg> registry add https://github.com/control-toolbox/ct-registry.git","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Finally, you can install any package as usual. For instance:","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"pkg> add CTProblems","category":"page"},{"location":"index.html#Main-repositories","page":"Introduction","title":"Main repositories","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"The main repositories of the control-toolbox ecosystem are:","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"bocop: Bocop3, a direct solver for optimal control problem developed in C++\nct-registry: the control-toolbox registry since the packages are not yet available in the official registry\nCTBase.jl: fundamentals of the control-toolbox ecosystem\nCTDirect.jl: direct transcription of an optimal control problem and resolution\nCTDirectShooting.jl: direct shooting transcription of an optimal control problem and resolution\nCTFlows.jl: classical flow, Hamiltonian flow, flow from optimal control problem\nCTProblems.jl: library of optimal control problems\nOptimalControl.jl: main package\nPathFollowing.jl: path following methods","category":"page"},{"location":"index.html#Discussions","page":"Introduction","title":"Discussions","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"We discuss about the control-toolbox ecosystem here:","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"(Image: Github Issues)\n(Image: GitHub Discussions)\n(Image: GitHub Wiki)","category":"page"},{"location":"index.html#Overview-of-CTProblems.jl","page":"Introduction","title":"Overview of CTProblems.jl","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"The CTProblems.jl package provides a list of optimal control problems, each of them is made of a description, the model and the solution. You can get access to any problem by a simple description, see CTBase.jl. For instance, to get the energy-min one dimensional exponential problem, simply","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"using CTProblems\nprob = Problem(:exponential, :dim1, :energy)","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Then, the model is given by","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"prob.model","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"You can plot the solution.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"plot(prob.solution)","category":"page"},{"location":"index.html#List-of-problems","page":"Introduction","title":"List of problems","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"To print the complete list of Problems:","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Problems()","category":"page"},{"location":"problems/simple_exponential.html#Simple-exponential","page":"Simple exponential","title":"Simple exponential","text":"","category":"section"},{"location":"problems/simple_exponential.html","page":"Simple exponential","title":"Simple exponential","text":"using CTProblems","category":"page"},{"location":"problems/simple_exponential.html","page":"Simple exponential","title":"Simple exponential","text":"The energy-min simple exponential problem consists in minimising","category":"page"},{"location":"problems/simple_exponential.html","page":"Simple exponential","title":"Simple exponential","text":"    frac12int_0^1 u^2(t)  mathrmdt","category":"page"},{"location":"problems/simple_exponential.html","page":"Simple exponential","title":"Simple exponential","text":"subject to the constraints","category":"page"},{"location":"problems/simple_exponential.html","page":"Simple exponential","title":"Simple exponential","text":"    dot x(t) = - x(t) + u(t)","category":"page"},{"location":"problems/simple_exponential.html","page":"Simple exponential","title":"Simple exponential","text":"and the limit conditions","category":"page"},{"location":"problems/simple_exponential.html","page":"Simple exponential","title":"Simple exponential","text":"    x(0) = -1 quad x(1) = 0","category":"page"},{"location":"problems/simple_exponential.html","page":"Simple exponential","title":"Simple exponential","text":"You can access the problem in the CTProblems package:","category":"page"},{"location":"problems/simple_exponential.html","page":"Simple exponential","title":"Simple exponential","text":"prob = Problem(:exponential, :dim1, :energy)","category":"page"},{"location":"problems/simple_exponential.html","page":"Simple exponential","title":"Simple exponential","text":"Then, the model is given by","category":"page"},{"location":"problems/simple_exponential.html","page":"Simple exponential","title":"Simple exponential","text":"prob.model","category":"page"},{"location":"problems/simple_exponential.html","page":"Simple exponential","title":"Simple exponential","text":"You can plot the solution.","category":"page"},{"location":"problems/simple_exponential.html","page":"Simple exponential","title":"Simple exponential","text":"plot(prob.solution)","category":"page"},{"location":"problems/double_integrator.html#Double-integrator","page":"Double integrator","title":"Double integrator","text":"","category":"section"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"The double integrator dynamics is given by ddotx = u. Setting x coloneqq (x_1 x_2), then we have dotx_1 = x_2, dotx_2 = u.","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"Pages = [\"double_integrator.md\"]\nDepth = 2","category":"page"},{"location":"problems/double_integrator.html#Energy-minimisation-problem","page":"Double integrator","title":"Energy minimisation problem","text":"","category":"section"},{"location":"problems/double_integrator.html#Presentation-of-the-problem","page":"Double integrator","title":"Presentation of the problem","text":"","category":"section"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"The energy minimisation problem consists in minimising the cost functional in Lagrange form","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"    frac12int_t_0^t_f u^2(t)  mathrmdt","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"subject to the constraints for t in t_0 t_f a.e.","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"    dot x_1(t) = x_2(t) quad dot x_2(t) = u(t) in mathbbR","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"and the limit conditions","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"    x(t_0) = (a b) quad x(t_f) = x_f","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"with a, b in mathbbR, x_f in mathbbR^2 and t_f ge t_0 = 0 fixed. Denoting H(x p u) coloneqq p_1 x_2 + p_2 u - u^22 the pseudo-Hamiltonian (in the normal case), then, by the Pontryagin Maximum Principle, the maximising control is given in feedback form by","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"    u(x p) coloneqq p_2","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"</br>\n<img src=\"../assets/di_energy_u.svg\" style=\"display: block; margin: 0 auto;\">\n</br>","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"Thus, solving this optimal control problem leads to solve the following boundary value problem:","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"    left\n    beginaligned\n         dotx_1(t) = x_2(t) quad \n        dotx_2(t) = u(x(t) p(t)) quad \n        dotp_1(t) = 0 quad \n        dotp_2(t) = -p_1(t) \n         x(0) = (a b) quad x(t_f) = x_f\n    endaligned\n    right","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"where p(t) = (p_1(t) p_2(t)) is the adjoint vector. Integrating first the differential system, we get","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"    left\n    beginaligned\n        p_1(t) = alpha 03em\n        p_2(t) = -alpha t + beta 03em\n        x_2(t) = b + int_0^t (-alpha s + beta) mathrmd s = \n        b + beta t - fracalpha2 t^2 03em\n        x_1(t) = a + b t + fracbeta2 t^2 - fracalpha6 t^3\n    endaligned\n    right    ","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"with p(0) = (alpha beta) the parameters to identify. Solving the boundary value problem, that is finding (alpha beta), is then equivalent to solve the shooting equation","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"    S(alpha beta) coloneqq\n    beginpmatrix\n        displaystyle a + b t_f + fracbeta2 t_f^2 - fracalpha6 t_f^3 05em\n        displaystyle b + beta t_f - fracalpha2 t_f^2\n    endpmatrix\n    - x_f = A p_0 - B = 0","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"where we set","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"    A coloneqq \n    beginpmatrix\n    -fract_f^36  fract_f^22 05em\n     -fract_f^22  t_f\n    endpmatrix\n    quad\n    B coloneqq ( -a-b t_f -b) + x_f\n    quad\n    textand\n    quad \n    p_0 coloneqq (alpha beta)","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"Note that the shooting function S is linear. If t_f ne 0, then, A is invertible since det A = t_f^412 and the solution is then given by","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"    p^*_0 = A^-1 B","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"For an illusration we set t_f=1, x_0 = (-1 0) and x_f = (0 0), see the following figure. The red sphere represents the solution.","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"<img src=\"../assets/di_energie_u_sfun.png\" style=\"display: block; margin: 0 auto;\">","category":"page"},{"location":"problems/double_integrator.html#The-problem-from-CTProblems.jl","page":"Double integrator","title":"The problem from CTProblems.jl","text":"","category":"section"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"You can access the problem from the CTProblems.jl package:","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"using CTProblems\nprob = Problem(:integrator, :dim2, :energy)","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"Then, the model is given by","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"prob.model","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"You can plot the solution.","category":"page"},{"location":"problems/double_integrator.html","page":"Double integrator","title":"Double integrator","text":"plot(prob.solution)","category":"page"}]
}
