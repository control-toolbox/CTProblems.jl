var documenterSearchIndex = {"docs":
[{"location":"descriptions-list.html#descriptions-list","page":"List of problems descriptions","title":"List of problems descriptions","text":"","category":"section"},{"location":"descriptions-list.html","page":"List of problems descriptions","title":"List of problems descriptions","text":"To print the complete list of problems descriptions:","category":"page"},{"location":"descriptions-list.html","page":"List of problems descriptions","title":"List of problems descriptions","text":"using CTProblems\nProblemsList()","category":"page"},{"location":"descriptions-list.html","page":"List of problems descriptions","title":"List of problems descriptions","text":"You can use more sophisticated rules to filter. You simply have to define a logical condition with the combination of symbols and the three operators: !, | and &, respectively for the negation, the disjunction and the conjunction.","category":"page"},{"location":"descriptions-list.html","page":"List of problems descriptions","title":"List of problems descriptions","text":"Here is an example to get the problems, as a tuple of Description, whom description does not contain :lagrange, or contains :time (the or is not exclusive):","category":"page"},{"location":"descriptions-list.html","page":"List of problems descriptions","title":"List of problems descriptions","text":"@ProblemsList !:lagrange | :time","category":"page"},{"location":"dev-api.html#Private-functions","page":"Private functions","title":"Private functions","text":"","category":"section"},{"location":"dev-api.html","page":"Private functions","title":"Private functions","text":"CurrentModule = CTProblems ","category":"page"},{"location":"dev-api.html","page":"Private functions","title":"Private functions","text":"Modules = [CTProblems]\nOrder = [:module, :type, :function, :macro]\nPublic = false","category":"page"},{"location":"dev-api.html#CTProblems.AbstractCTProblem","page":"Private functions","title":"CTProblems.AbstractCTProblem","text":"abstract type AbstractCTProblem\n\n\n\n\n\n","category":"type"},{"location":"dev-api.html#CTProblems.CTProblemsException","page":"Private functions","title":"CTProblems.CTProblemsException","text":"abstract type CTProblemsException <: Exception\n\n\n\n\n\n","category":"type"},{"location":"dev-api.html#CTProblems.NonExistingProblem","page":"Private functions","title":"CTProblems.NonExistingProblem","text":"struct NonExistingProblem <: CTProblems.CTProblemsException\n\nFields\n\nexample::Tuple{Vararg{Symbol}}\n\n\n\n\n\n","category":"type"},{"location":"dev-api.html#CTProblems.OCPDef","page":"Private functions","title":"CTProblems.OCPDef","text":"struct OCPDef{description}\n\nA type used to define new problems with a default constructor that throws a NonExistingProblem exception if there is no optimal control problem described by example.\n\nExample\n\njulia> CTProblems.OCPDef{(:ocp, :dummy)}()\nERROR: there is no optimal control problem described by (:ocp, :dummy)\n\nnote: Note\nTo define a new problem, please refer to the page How to add a new problem.\n\n\n\n\n\n","category":"type"},{"location":"dev-api.html#CTProblems.OptimalControlProblem","page":"Private functions","title":"CTProblems.OptimalControlProblem","text":"struct OptimalControlProblem <: CTProblems.AbstractCTProblem\n\nFields\n\ntitle::String\nmodel::CTBase.OptimalControlModel\nsolution::CTBase.OptimalControlSolution\n\nExample\n\njulia> using CTProblems\njulia> using CTBase\njulia> title = \"My empty optimal control problem\"\njulia> ocp = Model()\njulia> sol = OptimalControlSolution()\njulia> prob = CTProblems.OptimalControlProblem(title, ocp, sol)\njulia> prob isa CTProblems.AbstractCTProblem\ntrue\njulia> prob isa CTProblems.OptimalControlProblem\ntrue\n\n\n\n\n\n","category":"type"},{"location":"dev-api.html#Base.show-Tuple{IO, MIME{Symbol(\"text/plain\")}, CTProblems.OptimalControlProblem}","page":"Private functions","title":"Base.show","text":"show(\n    io::IO,\n    _::MIME{Symbol(\"text/plain\")},\n    problem::CTProblems.OptimalControlProblem\n)\n\n\nShow the title and the types of the model and the solution of the optimal control problem.\n\njulia> Problem(:integrator, :energy, :state_dim_2, :control_dim_1)\ntitle           = Double integrator - energy min\nmodel    (Type) = CTBase.OptimalControlModel{:autonomous, :scalar}\nsolution (Type) = CTBase.OptimalControlSolution\n\n\n\n\n\n","category":"method"},{"location":"dev-api.html#Base.show-Tuple{IO, MIME{Symbol(\"text/plain\")}, Tuple{Vararg{CTProblems.OptimalControlProblem}}}","page":"Private functions","title":"Base.show","text":"show(\n    io::IO,\n    _::MIME{Symbol(\"text/plain\")},\n    problems::Tuple{Vararg{CTProblems.OptimalControlProblem}}\n)\n\n\nPrint a tuple of optimal control problems.\n\n\n\n\n\n","category":"method"},{"location":"dev-api.html#Base.show-Tuple{IO, MIME{Symbol(\"text/plain\")}, Tuple{}}","page":"Private functions","title":"Base.show","text":"show(io::IO, _::MIME{Symbol(\"text/plain\")}, t::Tuple{})\n\n\nPrint an empty tuple.\n\n\n\n\n\n","category":"method"},{"location":"dev-api.html#Base.showerror-Tuple{IO, CTProblems.NonExistingProblem}","page":"Private functions","title":"Base.showerror","text":"showerror(io::IO, e::CTProblems.NonExistingProblem)\n\n\nPrint the error message when the optimal control problem described by e.example does not exist. \n\n\n\n\n\n","category":"method"},{"location":"dev-api.html#CTProblems._problems_without_dummy-Tuple{}","page":"Private functions","title":"CTProblems._problems_without_dummy","text":"_problems_without_dummy() -> Tuple\n\n\nReturn the list of optimal control problems (without the dummy problem).\n\n\n\n\n\n","category":"method"},{"location":"problems/goddard_all_constraints.html#Go2","page":"Goddard with state constraints: model 2","title":"Goddard with state constraints: model 2","text":"","category":"section"},{"location":"problems/goddard_all_constraints.html","page":"Goddard with state constraints: model 2","title":"Goddard with state constraints: model 2","text":"using CTProblems","category":"page"},{"location":"problems/goddard_all_constraints.html","page":"Goddard with state constraints: model 2","title":"Goddard with state constraints: model 2","text":"You can access the problem in the CTProblems package:","category":"page"},{"location":"problems/goddard_all_constraints.html","page":"Goddard with state constraints: model 2","title":"Goddard with state constraints: model 2","text":"prob = Problem(:goddard, :all_constraints)","category":"page"},{"location":"problems/goddard_all_constraints.html","page":"Goddard with state constraints: model 2","title":"Goddard with state constraints: model 2","text":"Then, the model is given by","category":"page"},{"location":"problems/goddard_all_constraints.html","page":"Goddard with state constraints: model 2","title":"Goddard with state constraints: model 2","text":"prob.model","category":"page"},{"location":"problems/goddard_all_constraints.html","page":"Goddard with state constraints: model 2","title":"Goddard with state constraints: model 2","text":"You can plot the solution.","category":"page"},{"location":"problems/goddard_all_constraints.html","page":"Goddard with state constraints: model 2","title":"Goddard with state constraints: model 2","text":"plot(prob.solution, size=(700, 900))","category":"page"},{"location":"problems-list.html#problems-list","page":"List of problems","title":"List of problems","text":"","category":"section"},{"location":"problems-list.html","page":"List of problems","title":"List of problems","text":"Pages = [\"problems-list.md\"]\nDepth = 2","category":"page"},{"location":"problems-list.html#Characteristics-of-the-problems","page":"List of problems","title":"Characteristics of the problems","text":"","category":"section"},{"location":"problems-list.html","page":"List of problems","title":"List of problems","text":"In the following table, we give some characteristics about the problems and their solutions.","category":"page"},{"location":"problems-list.html","page":"List of problems","title":"List of problems","text":"Problem (x, u) dims Objective Constraint arc Singular arc Differentiable\nSimple exponential energy (1, 1) Lagrange ❌ ❌ ✅\nSimple exponential time (1, 1) Lagrange ❌ ❌ ✅\nSimple exponential consumption (1, 1) Lagrange ❌ ❌ ❌ u\nDouble integrator energy (2, 1) Lagrange ❌ ❌ ✅\nGoddard (version 2) (3, 1) Mayer ✅ x, u ✅ ✅","category":"page"},{"location":"problems-list.html","page":"List of problems","title":"List of problems","text":"Legend:","category":"page"},{"location":"problems-list.html","page":"List of problems","title":"List of problems","text":"Problem: a name with a link to the problem page\n(x, u) dims: dimension of the state and the control\nObjective: Lagrange, Mayer or Bolza\nConstraint arc (active on the solution):\n❌ (no)\n✅ x(pure state constraints)\n✅ u (pure control constraints)\n✅ (x,u) (mixed state/control constraints)\nSingular arc: in the case of affine problems, we tell if the solution has a singular arc, that is a non-empty arc along which the switching function vanishes.\n❌ (no)\n✅ (yes)\nDifferentiable:\n✅ (yes)\n❌ x (the dynamics and/or other data from the model is non differentiable wrt to the state)\n❌ u (the dynamics and/or other data from the model is non differentiable wrt to the control)","category":"page"},{"location":"problems-list.html#Get-some-problems-for-tests","page":"List of problems","title":"Get some problems for tests","text":"","category":"section"},{"location":"problems-list.html","page":"List of problems","title":"List of problems","text":"To get all the problems as a tuple of OptimalControlProblem, simply","category":"page"},{"location":"problems-list.html","page":"List of problems","title":"List of problems","text":"Problems()","category":"page"},{"location":"problems-list.html","page":"List of problems","title":"List of problems","text":"To get all the problems with one dimensional state and with a Lagrange cost:","category":"page"},{"location":"problems-list.html","page":"List of problems","title":"List of problems","text":"Problems(:state_dim_1, :lagrange)","category":"page"},{"location":"problems-list.html","page":"List of problems","title":"List of problems","text":"You can use more sophisticated rules to filter. You simply have to define a logical condition with the combination of symbols and the three operators: !, | and &, respectively for the negation, the disjunction and the conjunction.","category":"page"},{"location":"problems-list.html","page":"List of problems","title":"List of problems","text":"Here is an example to get the problems, as a tuple of OptimalControlProblem, whom description does not contain :lagrange, or contains :time (the or is not exclusive):","category":"page"},{"location":"problems-list.html","page":"List of problems","title":"List of problems","text":"@Problems !:lagrange | :time","category":"page"},{"location":"problems/simple_exponential_time.html#SET","page":"Simple exponential: time minimisation","title":"Simple exponential: time minimisation","text":"","category":"section"},{"location":"problems/simple_exponential_time.html","page":"Simple exponential: time minimisation","title":"Simple exponential: time minimisation","text":"The time minimisation simple exponential problem consists in minimising","category":"page"},{"location":"problems/simple_exponential_time.html","page":"Simple exponential: time minimisation","title":"Simple exponential: time minimisation","text":"    tf","category":"page"},{"location":"problems/simple_exponential_time.html","page":"Simple exponential: time minimisation","title":"Simple exponential: time minimisation","text":"subject to the constraints","category":"page"},{"location":"problems/simple_exponential_time.html","page":"Simple exponential: time minimisation","title":"Simple exponential: time minimisation","text":"    dot x(t) = - x(t) + u(t) u(t) in -11","category":"page"},{"location":"problems/simple_exponential_time.html","page":"Simple exponential: time minimisation","title":"Simple exponential: time minimisation","text":"and the limit conditions","category":"page"},{"location":"problems/simple_exponential_time.html","page":"Simple exponential: time minimisation","title":"Simple exponential: time minimisation","text":"    x(0) = -1 quad x(1) = 0","category":"page"},{"location":"problems/simple_exponential_time.html","page":"Simple exponential: time minimisation","title":"Simple exponential: time minimisation","text":"You can access the problem in the CTProblems package:","category":"page"},{"location":"problems/simple_exponential_time.html","page":"Simple exponential: time minimisation","title":"Simple exponential: time minimisation","text":"using CTProblems\nprob = Problem(:exponential, :time)","category":"page"},{"location":"problems/simple_exponential_time.html","page":"Simple exponential: time minimisation","title":"Simple exponential: time minimisation","text":"Then, the model is given by","category":"page"},{"location":"problems/simple_exponential_time.html","page":"Simple exponential: time minimisation","title":"Simple exponential: time minimisation","text":"prob.model","category":"page"},{"location":"problems/simple_exponential_time.html","page":"Simple exponential: time minimisation","title":"Simple exponential: time minimisation","text":"You can plot the solution.","category":"page"},{"location":"problems/simple_exponential_time.html","page":"Simple exponential: time minimisation","title":"Simple exponential: time minimisation","text":"plot(prob.solution, size=(700, 400))","category":"page"},{"location":"api.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"CurrentModule = CTProblems ","category":"page"},{"location":"api.html","page":"API","title":"API","text":"Modules = [CTProblems]\nOrder = [:module, :type, :function, :macro]\nPrivate = false","category":"page"},{"location":"api.html#CTProblems.CTProblems","page":"API","title":"CTProblems.CTProblems","text":"CTProblems module.\n\nLists all the imported modules and packages:\n\nBase\nCTBase\nCTFlows\nCore\nDocStringExtensions\nMINPACK\n\nList of all the exported names:\n\nProblem\n@Problems\nProblems\n@ProblemsList\nProblemsList\nplot\n\n\n\n\n\n","category":"module"},{"location":"api.html#CTProblems.Problem-Tuple","page":"API","title":"CTProblems.Problem","text":"Problem(description...) -> Any\n\n\nReturns the optimal control problem described by description. See the Introduction and page list of problems for details.\n\nExample\n\njulia> Problem(:integrator, :energy)\n\n\n\n\n\n","category":"method"},{"location":"api.html#CTProblems.Problems-Tuple","page":"API","title":"CTProblems.Problems","text":"Problems(\n    description...\n) -> Tuple{Vararg{CTProblems.OptimalControlProblem}}\n\n\nReturns the list of problems consistent with the description, as a Tuple of OptimalControlProblem,  see the page list of problems for details.\n\nExample\n\njulia> Problems(:integrator, :energy)\n\n\n\n\n\n","category":"method"},{"location":"api.html#CTProblems.Problems-Tuple{Union{Expr, QuoteNode}}","page":"API","title":"CTProblems.Problems","text":"Problems(\n    expr::Union{Expr, QuoteNode}\n) -> Tuple{Vararg{CTProblems.OptimalControlProblem}}\n\n\nReturns the list of problems consistent with the description, as a Tuple of OptimalControlProblem,  see the page list of problems for details.\n\nExample\n\njulia> Problems(:(:integrator & :energy))\n\nSee also\n\n@Problems for a more natural usage.\n\nnote: Note\nYou have to define a logical condition with the combination of symbols and the three  operators: !, | and &, respectively for the negation, the disjunction and the conjunction.\n\n\n\n\n\n","category":"method"},{"location":"api.html#CTProblems.ProblemsList-Tuple","page":"API","title":"CTProblems.ProblemsList","text":"ProblemsList(\n    description...\n) -> Tuple{Vararg{Tuple{Vararg{Symbol}}}}\n\n\nReturns the list of problems descriptions consistent with the description, as a Tuple of Description,  see the page list of problems descriptions for details.\n\nExample\n\njulia> ProblemsList(:integrator, :energy)\n\n\n\n\n\n","category":"method"},{"location":"api.html#CTProblems.ProblemsList-Tuple{Union{Expr, QuoteNode}}","page":"API","title":"CTProblems.ProblemsList","text":"ProblemsList(\n    expr::Union{Expr, QuoteNode}\n) -> Tuple{Vararg{Tuple{Vararg{Symbol}}}}\n\n\nReturns the list of problems descriptions consistent with the expression, as a Tuple of Description,  see the list of problems descriptions page for details.\n\nExample\n\njulia> ProblemsList(:(:integrator & :energy))\n\nSee also\n\n@ProblemsList for a more natural usage.\n\nnote: Note\nYou have to define a logical condition with the combination of symbols and the three  operators: !, | and &, respectively for the negation, the disjunction and the conjunction.\n\n\n\n\n\n","category":"method"},{"location":"api.html#RecipesBase.plot-Tuple{Any}","page":"API","title":"RecipesBase.plot","text":"plot(sol; kwargs...) -> Plots.Plot\n\n\nA binding to CTBase.jl plot function.\n\n\n\n\n\n","category":"method"},{"location":"api.html#CTProblems.@Problems-Tuple{Union{Expr, QuoteNode}}","page":"API","title":"CTProblems.@Problems","text":"Returns the list of problems consistent with the description, as a Tuple of OptimalControlProblem,  see the page list of problems for details.\n\nExample\n\njulia> @Problems :integrator & :energy\n\nnote: Note\nYou have to define a logical condition with the combination of symbols and the three  operators: !, | and &, respectively for the negation, the disjunction and the conjunction.\n\n\n\n\n\n","category":"macro"},{"location":"api.html#CTProblems.@ProblemsList-Tuple{Union{Expr, QuoteNode}}","page":"API","title":"CTProblems.@ProblemsList","text":"Returns the list of problems descriptions consistent with the expression, as a Tuple of Description,  see the list of problems descriptions page for details.\n\nExample\n\njulia> @ProblemsList :integrator & :energy\n\nnote: Note\nYou have to define a logical condition with the combination of symbols and the three  operators: !, | and &, respectively for the negation, the disjunction and the conjunction.\n\n\n\n\n\n","category":"macro"},{"location":"problems/goddard.html#Godda","page":"Goddard with state constraints","title":"Goddard with state constraints","text":"","category":"section"},{"location":"problems/goddard.html","page":"Goddard with state constraints","title":"Goddard with state constraints","text":"using CTProblems","category":"page"},{"location":"problems/goddard.html","page":"Goddard with state constraints","title":"Goddard with state constraints","text":"You can access the problem in the CTProblems package:","category":"page"},{"location":"problems/goddard.html","page":"Goddard with state constraints","title":"Goddard with state constraints","text":"prob = Problem(:goddard, :classical)","category":"page"},{"location":"problems/goddard.html","page":"Goddard with state constraints","title":"Goddard with state constraints","text":"Then, the model is given by","category":"page"},{"location":"problems/goddard.html","page":"Goddard with state constraints","title":"Goddard with state constraints","text":"prob.model","category":"page"},{"location":"problems/goddard.html","page":"Goddard with state constraints","title":"Goddard with state constraints","text":"You can plot the solution.","category":"page"},{"location":"problems/goddard.html","page":"Goddard with state constraints","title":"Goddard with state constraints","text":"plot(prob.solution, size=(700, 900))","category":"page"},{"location":"dev-add-pb.html#add-new-pb","page":"How to add a new problem","title":"How to add a new problem","text":"","category":"section"},{"location":"dev-add-pb.html","page":"How to add a new problem","title":"How to add a new problem","text":"Pages = [\"dev-add-pb.md\"]\nDepth = 2","category":"page"},{"location":"dev-add-pb.html#Find-a-description","page":"How to add a new problem","title":"Find a description","text":"","category":"section"},{"location":"dev-add-pb.html","page":"How to add a new problem","title":"How to add a new problem","text":"Let us assume you want to add a planar orbital time minimisation transfer problem from space mechanics.  This problem will be described by a Description, cf. CTBase.jl, following the nomenclature given in src/CTProblems.jl. For instance:","category":"page"},{"location":"dev-add-pb.html","page":"How to add a new problem","title":"How to add a new problem","text":"(:orbital, :time, :state_dim_4, control_dim_2, :mayer)","category":"page"},{"location":"dev-add-pb.html","page":"How to add a new problem","title":"How to add a new problem","text":"Nomenclature:","category":"page"},{"location":"dev-add-pb.html","page":"How to add a new problem","title":"How to add a new problem","text":":name_of_the_problem, and other symbols for a clear description\nif the objective is classical, you can mention it: :time, :energy, :consumption","category":"page"},{"location":"dev-add-pb.html","page":"How to add a new problem","title":"How to add a new problem","text":"then","category":"page"},{"location":"dev-add-pb.html","page":"How to add a new problem","title":"How to add a new problem","text":"dimensions: :state_dim_1, :state_dim_2... :control_dim_1, :control_dim_2...\nobjective type: :lagrange, :mayer, :bolza\nconstraint arc (active on the solution): :state_constraint, :control_constraint, :mixed_constraint\nsingular arc (on the solution): :singular_arc\ndifferentiability: :state_non_differentiable, :control_non_differentiable","category":"page"},{"location":"dev-add-pb.html#Create-a-new-file-with-an-empty-template","page":"How to add a new problem","title":"Create a new file with an empty template","text":"","category":"section"},{"location":"dev-add-pb.html","page":"How to add a new problem","title":"How to add a new problem","text":"You have to create a new file in the directory src/problems. For instance:","category":"page"},{"location":"dev-add-pb.html","page":"How to add a new problem","title":"How to add a new problem","text":"touch src/problems/orbital_planar.jl","category":"page"},{"location":"dev-add-pb.html","page":"How to add a new problem","title":"How to add a new problem","text":"Add it to the list of problems, in src/CTProblems.jl:","category":"page"},{"location":"dev-add-pb.html","page":"How to add a new problem","title":"How to add a new problem","text":"list_of_problems_files = [\n    \"...\",\n    \"orbital_planar.jl\",\n]","category":"page"},{"location":"dev-add-pb.html","page":"How to add a new problem","title":"How to add a new problem","text":"Then, you can write into this file the following empty template.","category":"page"},{"location":"dev-add-pb.html","page":"How to add a new problem","title":"How to add a new problem","text":"warning: Warning\nIt is required to define a variable named EXAMPLE containing the description.","category":"page"},{"location":"dev-add-pb.html","page":"How to add a new problem","title":"How to add a new problem","text":"EXAMPLE=(:orbital, :time, :state_dim_4, control_dim_2, :mayer)\n\n@eval function OCPDef{EXAMPLE}()\n\n    # the description\n    title = \"Planar orbital transfer\"\n\n    # the model: to be completed\n    ocp = Model()\n\n    # the solution: to be completed\n    sol = OptimalControlSolution()\n\n    sol.message = \"structure: ...\"  # Give the structure as an additional info. \n                                    # For instance, B+S for positive bang followed\n                                    # a by singular arc.\n                                    \n    sol.infos[:resolution] = :numerical # Either :numerical or :analytical\n                                        # depending on how you get the solution\n\n    #\n    return OptimalControlProblem(title, ocp, sol)\n\nend","category":"page"},{"location":"dev-add-pb.html#Code-the-model-and-the-solution","page":"How to add a new problem","title":"Code the model and the solution","text":"","category":"section"},{"location":"dev-add-pb.html","page":"How to add a new problem","title":"How to add a new problem","text":"For now, you have to complete the model and the solution. You can take example from the already existing problems in src/problems. See also the documentation of CTBase.jl. Try to fulfill all the fields of OptimalControlSolution.","category":"page"},{"location":"dev-add-pb.html#Add-a-unit-test","page":"How to add a new problem","title":"Add a unit test","text":"","category":"section"},{"location":"dev-add-pb.html","page":"How to add a new problem","title":"How to add a new problem","text":"To complete the process, a unit test must be created. See the test directory for examples. The unit test should be written by a different person to robustify the process.","category":"page"},{"location":"problems/double_integrator_energy.html#DIE","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"","category":"section"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"The energy minimisation problem consists in minimising the cost functional in Lagrange form","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"    frac12int_t_0^t_f u^2(t)  mathrmdt","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"subject to the constraints for t in t_0 t_f a.e.","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"    dot x_1(t) = x_2(t) quad dot x_2(t) = u(t) in mathbbR","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"and the limit conditions","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"    x(t_0) = (a b) quad x(t_f) = x_f","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"with a, b in mathbbR, x_f in mathbbR^2 and t_f ge t_0 = 0 fixed. Denoting H(x p u) coloneqq p_1 x_2 + p_2 u - u^22 the pseudo-Hamiltonian (in the normal case), then, by the Pontryagin Maximum Principle, the maximising control is given in feedback form by","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"    u(x p) coloneqq p_2","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"<img src=\"../assets/di_energy_u.svg\" style=\"display: block; margin: 0 auto;\">","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"Thus, solving this optimal control problem leads to solve the following boundary value problem:","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"    left\n    beginaligned\n         dotx_1(t) = x_2(t) quad \n        dotx_2(t) = u(x(t) p(t)) quad \n        dotp_1(t) = 0 quad \n        dotp_2(t) = -p_1(t) \n         x(0) = (a b) quad x(t_f) = x_f\n    endaligned\n    right","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"where p(t) = (p_1(t) p_2(t)) is the adjoint vector. Integrating first the differential system, we get","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"    left\n    beginaligned\n        p_1(t) = alpha 03em\n        p_2(t) = -alpha t + beta 03em\n        x_2(t) = b + int_0^t (-alpha s + beta) mathrmd s = \n        b + beta t - fracalpha2 t^2 03em\n        x_1(t) = a + b t + fracbeta2 t^2 - fracalpha6 t^3\n    endaligned\n    right    ","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"with p(0) = (alpha beta) the parameters to identify. Solving the boundary value problem, that is finding (alpha beta), is then equivalent to solve the shooting equation","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"    S(alpha beta) coloneqq\n    beginpmatrix\n        displaystyle a + b t_f + fracbeta2 t_f^2 - fracalpha6 t_f^3 05em\n        displaystyle b + beta t_f - fracalpha2 t_f^2\n    endpmatrix\n    - x_f = A p_0 - B = 0","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"where we set","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"    A coloneqq \n    beginpmatrix\n    -fract_f^36  fract_f^22 05em\n     -fract_f^22  t_f\n    endpmatrix\n    quad\n    B coloneqq ( -a-b t_f -b) + x_f\n    quad\n    textand\n    quad \n    p_0 coloneqq (alpha beta)","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"Note that the shooting function S is linear. If t_f ne 0, then, A is invertible since det A = t_f^412 and the solution is then given by","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"    p^*_0 = A^-1 B","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"For an illusration we set t_f=1, x_0 = (-1 0) and x_f = (0 0), see the following figure. The red sphere represents the solution.","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"<img src=\"../assets/di_energy_sfun.png\" style=\"display: block; margin: 0 auto;\">","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"You can access the problem from the CTProblems.jl package:","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"using CTProblems\nprob = Problem(:integrator, :energy, :state_dim_2)","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"Then, the model is given by","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"prob.model","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"You can plot the solution.","category":"page"},{"location":"problems/double_integrator_energy.html","page":"Double integrator: energy minimisation","title":"Double integrator: energy minimisation","text":"plot(prob.solution, size=(700, 700))","category":"page"},{"location":"problems/simple_exponential_energy.html#SEE","page":"Simple exponential: energy minimisation","title":"Simple exponential: energy minimisation","text":"","category":"section"},{"location":"problems/simple_exponential_energy.html","page":"Simple exponential: energy minimisation","title":"Simple exponential: energy minimisation","text":"The energy minimisation simple exponential problem consists in minimising","category":"page"},{"location":"problems/simple_exponential_energy.html","page":"Simple exponential: energy minimisation","title":"Simple exponential: energy minimisation","text":"    frac12int_0^1 u^2(t)  mathrmdt","category":"page"},{"location":"problems/simple_exponential_energy.html","page":"Simple exponential: energy minimisation","title":"Simple exponential: energy minimisation","text":"subject to the constraints","category":"page"},{"location":"problems/simple_exponential_energy.html","page":"Simple exponential: energy minimisation","title":"Simple exponential: energy minimisation","text":"    dot x(t) = - x(t) + u(t) u(t) in mathbbR","category":"page"},{"location":"problems/simple_exponential_energy.html","page":"Simple exponential: energy minimisation","title":"Simple exponential: energy minimisation","text":"and the limit conditions","category":"page"},{"location":"problems/simple_exponential_energy.html","page":"Simple exponential: energy minimisation","title":"Simple exponential: energy minimisation","text":"    x(0) = -1 quad x(1) = 0","category":"page"},{"location":"problems/simple_exponential_energy.html","page":"Simple exponential: energy minimisation","title":"Simple exponential: energy minimisation","text":"You can access the problem in the CTProblems package:","category":"page"},{"location":"problems/simple_exponential_energy.html","page":"Simple exponential: energy minimisation","title":"Simple exponential: energy minimisation","text":"using CTProblems\nprob = Problem(:exponential, :energy)","category":"page"},{"location":"problems/simple_exponential_energy.html","page":"Simple exponential: energy minimisation","title":"Simple exponential: energy minimisation","text":"Then, the model is given by","category":"page"},{"location":"problems/simple_exponential_energy.html","page":"Simple exponential: energy minimisation","title":"Simple exponential: energy minimisation","text":"prob.model","category":"page"},{"location":"problems/simple_exponential_energy.html","page":"Simple exponential: energy minimisation","title":"Simple exponential: energy minimisation","text":"You can plot the solution.","category":"page"},{"location":"problems/simple_exponential_energy.html","page":"Simple exponential: energy minimisation","title":"Simple exponential: energy minimisation","text":"plot(prob.solution, size=(700, 400))","category":"page"},{"location":"problems/simple_exponential_consumption.html#SEC","page":"Simple exponential: consumption minimisation","title":"Simple exponential: consumption minimisation","text":"","category":"section"},{"location":"problems/simple_exponential_consumption.html","page":"Simple exponential: consumption minimisation","title":"Simple exponential: consumption minimisation","text":"The consumption minimisation simple exponential problem consists in minimising","category":"page"},{"location":"problems/simple_exponential_consumption.html","page":"Simple exponential: consumption minimisation","title":"Simple exponential: consumption minimisation","text":"    int_0^1 u(t)  mathrmdt","category":"page"},{"location":"problems/simple_exponential_consumption.html","page":"Simple exponential: consumption minimisation","title":"Simple exponential: consumption minimisation","text":"subject to the constraints","category":"page"},{"location":"problems/simple_exponential_consumption.html","page":"Simple exponential: consumption minimisation","title":"Simple exponential: consumption minimisation","text":"    dot x(t) = - x(t) + u(t) u(t) in -11","category":"page"},{"location":"problems/simple_exponential_consumption.html","page":"Simple exponential: consumption minimisation","title":"Simple exponential: consumption minimisation","text":"and the limit conditions","category":"page"},{"location":"problems/simple_exponential_consumption.html","page":"Simple exponential: consumption minimisation","title":"Simple exponential: consumption minimisation","text":"    x(0) = -1 quad x(1) = 0","category":"page"},{"location":"problems/simple_exponential_consumption.html","page":"Simple exponential: consumption minimisation","title":"Simple exponential: consumption minimisation","text":"You can access the problem in the CTProblems package:","category":"page"},{"location":"problems/simple_exponential_consumption.html","page":"Simple exponential: consumption minimisation","title":"Simple exponential: consumption minimisation","text":"using CTProblems\nprob = Problem(:exponential, :consumption)","category":"page"},{"location":"problems/simple_exponential_consumption.html","page":"Simple exponential: consumption minimisation","title":"Simple exponential: consumption minimisation","text":"Then, the model is given by","category":"page"},{"location":"problems/simple_exponential_consumption.html","page":"Simple exponential: consumption minimisation","title":"Simple exponential: consumption minimisation","text":"prob.model","category":"page"},{"location":"problems/simple_exponential_consumption.html","page":"Simple exponential: consumption minimisation","title":"Simple exponential: consumption minimisation","text":"You can plot the solution.","category":"page"},{"location":"problems/simple_exponential_consumption.html","page":"Simple exponential: consumption minimisation","title":"Simple exponential: consumption minimisation","text":"plot(prob.solution, size=(700, 400))","category":"page"},{"location":"index.html#introduction","page":"Introduction","title":"Introduction to the CTProblems.jl package","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"The CTProblems.jl package is part of the control-toolbox ecosystem.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"note: Note\nTo install a package from the control-toolbox ecosystem, please visit the installation page.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"The CTProblems.jl package provides a list of optimal control problems composed of a short title (a string), the model and the solution, respectively of types OptimalControlModel and OptimalControlSolution, defined in the package CTBase.jl. You can get any problem by a simple description, see CTBase.jl, that is a tuple of symbols.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"For instance, to get the energy minimisation one dimensional exponential problem, simply","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"using CTProblems\nprob = Problem(:exponential, :energy, :state_dim_1)","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"note: Note\nYou can give a partial description. The complete description is(:exponential, :energy, :state_dim_1, :control_dim_1, :lagrange)","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"warning: Warning\nIf you give a partial description, then, if several complete descriptions contains what is given, then, only the problem with the highest priority is returned. The higher in the list, the higher is the priority. See the list of descriptions.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Then, the title is given by","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"prob.title","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"The model is given by","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"prob.model","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"And you can plot the solution.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"plot(prob.solution, size=(700, 500))","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"note: Note\nTo get more than one problem, you can use the function Problems, see also the list of problems.","category":"page"}]
}
